# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import appointment_pb2 as appointment__pb2


class AppointmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAppointment = channel.unary_unary(
                '/appointment.AppointmentService/GetAppointment',
                request_serializer=appointment__pb2.GetAppointmentRequest.SerializeToString,
                response_deserializer=appointment__pb2.Appointment.FromString,
                )
        self.CreateAppointment = channel.unary_unary(
                '/appointment.AppointmentService/CreateAppointment',
                request_serializer=appointment__pb2.Appointment.SerializeToString,
                response_deserializer=appointment__pb2.Appointment.FromString,
                )
        self.UpdateAppointment = channel.unary_unary(
                '/appointment.AppointmentService/UpdateAppointment',
                request_serializer=appointment__pb2.GetAppointmentRequest.SerializeToString,
                response_deserializer=appointment__pb2.Appointment.FromString,
                )
        self.DeleteAppointment = channel.unary_unary(
                '/appointment.AppointmentService/DeleteAppointment',
                request_serializer=appointment__pb2.GetAppointmentRequest.SerializeToString,
                response_deserializer=appointment__pb2.Empty.FromString,
                )
        self.ListAppointment = channel.unary_unary(
                '/appointment.AppointmentService/ListAppointment',
                request_serializer=appointment__pb2.Empty.SerializeToString,
                response_deserializer=appointment__pb2.Appointment.FromString,
                )


class AppointmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAppointment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AppointmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppointment,
                    request_deserializer=appointment__pb2.GetAppointmentRequest.FromString,
                    response_serializer=appointment__pb2.Appointment.SerializeToString,
            ),
            'CreateAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAppointment,
                    request_deserializer=appointment__pb2.Appointment.FromString,
                    response_serializer=appointment__pb2.Appointment.SerializeToString,
            ),
            'UpdateAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAppointment,
                    request_deserializer=appointment__pb2.GetAppointmentRequest.FromString,
                    response_serializer=appointment__pb2.Appointment.SerializeToString,
            ),
            'DeleteAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAppointment,
                    request_deserializer=appointment__pb2.GetAppointmentRequest.FromString,
                    response_serializer=appointment__pb2.Empty.SerializeToString,
            ),
            'ListAppointment': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAppointment,
                    request_deserializer=appointment__pb2.Empty.FromString,
                    response_serializer=appointment__pb2.Appointment.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'appointment.AppointmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AppointmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/appointment.AppointmentService/GetAppointment',
            appointment__pb2.GetAppointmentRequest.SerializeToString,
            appointment__pb2.Appointment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/appointment.AppointmentService/CreateAppointment',
            appointment__pb2.Appointment.SerializeToString,
            appointment__pb2.Appointment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/appointment.AppointmentService/UpdateAppointment',
            appointment__pb2.GetAppointmentRequest.SerializeToString,
            appointment__pb2.Appointment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/appointment.AppointmentService/DeleteAppointment',
            appointment__pb2.GetAppointmentRequest.SerializeToString,
            appointment__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAppointment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/appointment.AppointmentService/ListAppointment',
            appointment__pb2.Empty.SerializeToString,
            appointment__pb2.Appointment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
